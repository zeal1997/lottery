{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      rotateDegree: 0,\n      isSpinning: false,\n      spinningTime: 5000\n    };\n  },\n  computed: {\n    availablePrizes() {\n      return this.$store.state.prizes.filter(p => p.count > 0);\n    },\n    hasDrawn() {\n      return this.$store.state.hasDrawn;\n    },\n    winningPrize() {\n      return this.$store.state.winningPrize;\n    }\n  },\n  methods: {\n    getSectorStyle(index) {\n      const angle = 360 / this.availablePrizes.length;\n      return {\n        transform: `rotate(${index * angle}deg)`,\n        clipPath: `polygon(50% 50%, 50% 0%, ${50 + 50 * Math.cos(angle * Math.PI / 180 * (index + 0.5))}% ${50 - 50 * Math.sin(angle * Math.PI / 180 * (index + 0.5))}%)`\n      };\n    },\n    startDraw() {\n      this.isSpinning = true;\n      this.rotateDegree += 360 * 5 + Math.random() * 360; // 旋转5圈以上\n\n      // 抽奖结束后处理\n      setTimeout(() => {\n        this.isSpinning = false;\n        this.$store.dispatch('drawPrize');\n      }, this.spinningTime);\n    },\n    closeResult() {\n      this.$router.push('/result');\n    }\n  }\n};","map":{"version":3,"names":["data","rotateDegree","isSpinning","spinningTime","computed","availablePrizes","$store","state","prizes","filter","p","count","hasDrawn","winningPrize","methods","getSectorStyle","index","angle","length","transform","clipPath","Math","cos","PI","sin","startDraw","random","setTimeout","dispatch","closeResult","$router","push"],"sources":["/Users/jackie/Documents/vue/lottery/src/components/LotteryWheel.vue"],"sourcesContent":["<template>\n  <div class=\"lottery-container\">\n    <h2>幸运大转盘</h2>\n    <div class=\"wheel-wrapper\">\n      <div class=\"wheel\" :style=\"{ transform: `rotate(${rotateDegree}deg)` }\" :class=\"{ spinning: isSpinning }\">\n        <!-- 转盘扇区 -->\n        <div v-for=\"(prize, index) in availablePrizes\" :key=\"prize.id\" class=\"wheel-sector\" :style=\"getSectorStyle(index)\">\n          <span class=\"prize-name\">{{ prize.name }}</span>\n        </div>\n        <div class=\"wheel-pointer\"></div>\n      </div>\n    </div>\n    <button class=\"draw-btn\" @click=\"startDraw\" :disabled=\"isSpinning || hasDrawn\">\n      {{ isSpinning ? '抽奖中...' : '开始抽奖' }}\n    </button>\n    <!-- 中奖弹窗 -->\n    <div v-if=\"winningPrize\" class=\"result-modal\">\n      <div class=\"modal-content\">\n        <h3>恭喜您中奖了！</h3>\n        <p>奖品：{{ winningPrize.name }}</p>\n        <button @click=\"closeResult\">确定</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() { return { rotateDegree: 0, isSpinning: false, spinningTime: 5000 }},\n  computed: {\n    availablePrizes() { return this.$store.state.prizes.filter(p => p.count > 0) },\n    hasDrawn() { return this.$store.state.hasDrawn },\n    winningPrize() { return this.$store.state.winningPrize }\n  },\n  methods: {\n    getSectorStyle(index) {\n      const angle = 360 / this.availablePrizes.length\n      return {\n        transform: `rotate(${index * angle}deg)`,\n        clipPath: `polygon(50% 50%, 50% 0%, ${50 + 50 * Math.cos((angle * Math.PI / 180) * (index + 0.5))}% ${50 - 50 * Math.sin((angle * Math.PI / 180) * (index + 0.5))}%)`\n      }\n    },\n    startDraw() {\n      this.isSpinning = true\n      this.rotateDegree += 360 * 5 + Math.random() * 360 // 旋转5圈以上\n\n      // 抽奖结束后处理\n      setTimeout(() => {\n        this.isSpinning = false\n        this.$store.dispatch('drawPrize')\n      }, this.spinningTime)\n    },\n    closeResult() { this.$router.push('/result') }\n  }\n}\n</script>\n\n<style scoped>\n/* 转盘样式省略，包含旋转动画和扇区样式 */\n.wheel { width: 300px; height: 300px; border-radius: 50%; position: relative; transition: transform 5s cubic-bezier(0.2, 0.8, 0.2, 1); border: 5px solid #42b983; overflow: hidden; }\n.wheel-sector { position: absolute; width: 100%; height: 100%; top: 0; left: 0; transform-origin: center bottom; display: flex; align-items: center; justify-content: center; }\n/* 其他样式省略 */\n</style>"],"mappings":";;;AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IAAE,OAAO;MAAEC,YAAY,EAAE,CAAC;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAK,CAAC;EAAA,CAAC;EAC3EC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAAE,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,KAAI,GAAI,CAAC;IAAE,CAAC;IAC9EC,QAAQA,CAAA,EAAG;MAAE,OAAO,IAAI,CAACN,MAAM,CAACC,KAAK,CAACK,QAAO;IAAE,CAAC;IAChDC,YAAYA,CAAA,EAAG;MAAE,OAAO,IAAI,CAACP,MAAM,CAACC,KAAK,CAACM,YAAW;IAAE;EACzD,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,MAAMC,KAAI,GAAI,GAAE,GAAI,IAAI,CAACZ,eAAe,CAACa,MAAK;MAC9C,OAAO;QACLC,SAAS,EAAE,UAAUH,KAAI,GAAIC,KAAK,MAAM;QACxCG,QAAQ,EAAE,4BAA4B,EAAC,GAAI,EAAC,GAAIC,IAAI,CAACC,GAAG,CAAEL,KAAI,GAAII,IAAI,CAACE,EAAC,GAAI,GAAG,IAAKP,KAAI,GAAI,GAAG,CAAC,CAAC,KAAK,EAAC,GAAI,EAAC,GAAIK,IAAI,CAACG,GAAG,CAAEP,KAAI,GAAII,IAAI,CAACE,EAAC,GAAI,GAAG,IAAKP,KAAI,GAAI,GAAG,CAAC,CAAC;MACnK;IACF,CAAC;IACDS,SAASA,CAAA,EAAG;MACV,IAAI,CAACvB,UAAS,GAAI,IAAG;MACrB,IAAI,CAACD,YAAW,IAAK,GAAE,GAAI,IAAIoB,IAAI,CAACK,MAAM,CAAC,IAAI,GAAE,EAAE;;MAEnD;MACAC,UAAU,CAAC,MAAM;QACf,IAAI,CAACzB,UAAS,GAAI,KAAI;QACtB,IAAI,CAACI,MAAM,CAACsB,QAAQ,CAAC,WAAW;MAClC,CAAC,EAAE,IAAI,CAACzB,YAAY;IACtB,CAAC;IACD0B,WAAWA,CAAA,EAAG;MAAE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAAS;IAAE;EAC/C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}